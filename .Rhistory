prty_date_cases<-prty_date_cases%>%mutate(Date_numeric=as.numeric(prty_date_cases$Date))
concern_cases<-inner_join(prty_date_cases, concern, by=c("Date_numeric", "Date_numeric"))
#Check the result
head(concern_cases)
#data for seperate plots for each party
dem_party<-concern_cases%>%filter(WINNER=="Clinton")
Election1 <- readRDS("~/Project/clean_data/Election1.rds")
#Let's join the two datasets
party_cases<-inner_join(cases1, Election1)
#Now let's group the states by the winnig party
#for us to be able to find a connection with the consern dataset
glimpse(party_cases)
prty_date_cases<-party_cases%>%group_by(Date, WINNER)%>%summarise(Cases=sum(Cases))
#check the result
head(prty_date_cases)
concern<-concern%>%mutate(Date_numeric=as.numeric(as.Date(concern$date)))
#prty_date_cases<-prty_date_cases%>%mutate(Date_numeric=as.numeric(prty_date_cases$Date))
#Now that we have the relevant data we can combine it with the concern dataset
#concern_cases<-inner_join(prty_date_cases, concern, by=c("Date_numeric", "Date_numeric"))
#Check the result
#head(concern_cases)
#data for seperate plots for each party
#dem_party<-concern_cases%>%filter(WINNER=="Clinton")
#head(dem_party)
#rep_party<-concern_cases%>%filter(WINNER=="Trump")
#ggplot(dem_party, aes(Date, Cases))+
#geom_point(aes(alpha=dem))
#libraries for plotting map
library(maps)
library(usdata)
us_states <- map_data("state")
#This data will help us plot the map
#let's check it
head(us_states)
#the region column here is the state, let's be consistent and rename it
names(us_states)[names(us_states) == "region"] <- "State"
#This df contains the state and the region it belongs to
#excluding the territories because they're irrelevant in our analysis
state_region<-cases1%>%
select(State, Region)%>%
filter(Region!="Territories")
state_region<-unique(state_region[c("State", "Region")])
glimpse(state_region)
#Converting the abbreviation to the full state name and creating a new
#column for it
state_region<-state_region%>%mutate(STATE=abbr2state(state_region$State))
#turning the states name to lower case to use them in joining
state_region$STATE <- tolower(state_region$STATE)
#check the data
glimpse(state_region)
#we'll combine the two dfs above by the state
us_plot_data<-inner_join(us_states,state_region, by = c("State" = "STATE"))
#Now we'll combine it with the cases
merge(us_plot_data, cases1)
glimpse(us_plot_data)
p <- ggplot(data = us_plot_data,
mapping = aes(x = long, y = lat,
group = group, fill=Region, color=State))
p + geom_polygon(color = "black")
#libraries for plotting map
library(maps)
library(usdata)
us_states <- map_data("state")
#This data will help us plot the map
#let's check it
head(us_states)
#the region column here is the state, let's be consistent and rename it
names(us_states)[names(us_states) == "region"] <- "State"
#This df contains the state and the region it belongs to
#excluding the territories because they're irrelevant in our analysis
state_region<-cases1%>%
select(State, Region)%>%
filter(Region!="Territories")
state_region<-unique(state_region[c("State", "Region")])
glimpse(state_region)
#Converting the abbreviation to the full state name and creating a new
#column for it
state_region<-state_region%>%mutate(STATE=abbr2state(state_region$State))
#turning the states name to lower case to use them in joining
state_region$STATE <- tolower(state_region$STATE)
#check the data
glimpse(state_region)
#we'll combine the two dfs above by the state
us_plot_data<-inner_join(us_states,state_region, by = c("State" = "STATE"))
#Now we'll combine it with the cases
merge(us_plot_data, cases1)
glimpse(us_plot_data)
p <- ggplot(data = us_plot_data,
mapping = aes(x = long, y = lat,
group = group, fill=Region, color=State))
p + geom_polygon(color = "black")
#libraries for plotting map
library(maps)
library(usdata)
us_states <- map_data("state")
#This data will help us plot the map
#let's check it
head(us_states)
#the region column here is the state, let's be consistent and rename it
names(us_states)[names(us_states) == "region"] <- "State"
#This df contains the state and the region it belongs to
#excluding the territories because they're irrelevant in our analysis
state_region<-cases1%>%
select(State, Region)%>%
filter(Region!="Territories")
state_region<-unique(state_region[c("State", "Region")])
glimpse(state_region)
#Converting the abbreviation to the full state name and creating a new
#column for it
state_region<-state_region%>%mutate(STATE=abbr2state(state_region$State))
#turning the states name to lower case to use them in joining
state_region$STATE <- tolower(state_region$STATE)
#check the data
glimpse(state_region)
#we'll combine the two dfs above by the state
us_plot_data<-inner_join(us_states,state_region, by = c("State" = "STATE"))
#Now we'll combine it with the cases
merge(us_plot_data, cases1)
glimpse(us_plot_data)
p <- ggplot(data = us_plot_data,
mapping = aes(x = long, y = lat,
group = group, fill=Region, color=State))
p + geom_polygon(color = "black")
### importing required librarys
library(tidyverse)
library(tidytext)
library(tidymodels)
library(textrecipes)
library(glue)
library(robotstxt)
library(rvest)
library(magrittr)
library(lubridate)
### covid concern dataset
concern<- concern %>%
rename_with(str_to_title) # making a title name for all columns
head(concern)
trump <- readRDS("~/Project/clean_data/trump.rds")
### trump tweets dataset
trump <- readRDS("~/Project/clean_data/trump.rds")
### trump tweets dataset
trump <- readRDS("~/Project/clean_data/trump.rds")
#Tidying the date column, separating date and time
#and creating an individual column for each
#converting the date from `character` to `date`
trump <-separate(trump, date, c("Date", "Time"), sep = " ") %>%
mutate(Date=as.Date(Date))
#Preparing the regrex expressions for the data cleaning
rgrs_symbols <- "@\\w+|https?://.+|\\d+\\w*\\d*|#\\w+|[^\x01-\x7F]|[[:punct:]]|rt|"
rgrs_spaces <- "\n|^\\s+|\\s+$|[ |\t]+"
replace_rgrs <- paste(rgrs_symbols,rgrs_spaces,collapse = NULL)
#Converting the text to small letter for the analysis
#Cleaning the data of spaces, new lines, mentions, unnecessary characters.. using regrex expressions
#Using a unified name for the Covid 19 and all its various spellings
trump_clean_text <- trump %>%
mutate(text=tolower(text)) %>%
mutate(text = str_replace_all(text, replace_rgrs, " "))%>%
mutate(
text = str_replace_all(text, "COVID-19", "COVID_19"),
text = str_replace_all(text, "COVID 19", "COVID_19"),
text = str_replace_all(text, "Covid-19", "COVID_19"),
text = str_replace_all(text, "Covid 19", "COVID_19")
)
head(trump_clean_text)
# making tokens from the tweet text column
#2gram tokenize
#dropping stopwords - unusful for our analysis
tokenized_trump<-trump_clean_text %>%
unnest_tokens(word, text, token = "ngrams", n = 2, n_min = 1) %>%
anti_join(stop_words, by = "word")
head(tokenized_trump)
## plots and summarise for the tweet text dataset after (text analysis)
# taking sample from trump ngrams
trump_ngrams <- tokenized_trump %>%
group_by(Date,word) %>%
summarise(n = n(), .groups = "drop") %>% # word frequency
arrange(desc(n)) %>% # arrange the words frequency in decending order
rowid_to_column(var = "index") %>% # adding index column
filter(word!='trump') %>% # no need for the word trump
filter(index<=5000) # sample of the dataset
head(trump_ngrams)
# adding the sentiment column for the dataset
trump_bing_word_count<-trump_ngrams %>%
inner_join(get_sentiments("bing"), by = "word") %>%
arrange(index)
head(trump_bing_word_count)
# plot showing the the word frequency with partition of sentiment
trump_bing_word_count %>%
group_by(sentiment) %>%
slice_max(n,n=10) %>%
ungroup() %>%
mutate(word=reorder(word, n)) %>%
ggplot(aes(n,reorder(word,-n),fill=sentiment),stat="identity") +
geom_col(show.legend=FALSE) +
facet_wrap(~sentiment,scales="free_y") +
labs(x="contribution to sentiment", y=NULL)
trump_bing_word_count <- trump_bing_word_count %>%
mutate(n = if_else(sentiment == 'negative', -n, n))
head(trump_bing_word_count)
df<-trump_bing_word_count %>%
group_by(sentiment)%>%
summarise(total_count = sum(n))
head(df)
df1<-trump_bing_word_count %>%
group_by(Date) %>%
summarise(total_count=sum(n))
# the joined data(cases dataset and the dataset that we made in the previous chunk(df1))
my_df<-df1%>%
inner_join(concern, by = "Date")
head(my_df)
### creating the model
# creating my linear model and specify the predicor
my_model <- linear_reg() %>%
set_engine("lm") %>%
fit(total_count ~ Diff, data=my_df) %>%
tidy()
my_model
# correlation between sentiment and the concern
cor(my_df$total_count, my_df$Diff)
split <- initial_split(my_df, prop=3/4)
set.seed(206549784)
split <- initial_split(my_df, prop=3/4)
train_df <- training(split)
test_df	<- testing(split)
my_lgm<- linear_reg() %>%  set_engine("lm") # linear regression Model specification
# making recipe for my my model
my_recipe <- recipe(Diff~.,data = train_df) %>%
step_date(Date) %>%
step_rm(Dem, Rep) %>% # make dummy variables
step_zv(all_predictors())
# fitting the train data to the model
my_wflow <- workflow() %>%
add_model(my_lgm) %>%
add_recipe(my_recipe)
fit<- my_wflow %>%  fit(data = train_df)
fit_df<- fit %>%
tidy()
head(fit_df)
# train predict
my_train_predict <- predict(fit, train_df) %>%
bind_cols(train_df %>% select(Diff, Date))
my_train_predict<-my_train_predict %>%
rename(predicted=.pred)
head(my_train_predict)
# test predict
my_test_predict <- predict(fit, test_df) %>%
bind_cols(test_df %>% select(Diff, Date))
my_test_predict<-my_test_predict %>%
rename(predicted=.pred)
head(my_test_predict)
### creating the model
# creating my linear model and specify the predicor
my_model <- linear_reg() %>%
set_engine("lm") %>%
fit(Diff ~ total_count, data=my_df) %>%
tidy()
my_model
# correlation between sentiment and the concern
cor(my_df$total_count, my_df$Diff)
set.seed(206549784)
split <- initial_split(my_df, prop=3/4)
train_df <- training(split)
test_df	<- testing(split)
my_lgm<- linear_reg() %>%  set_engine("lm") # linear regression Model specification
# making recipe for my my model
my_recipe <- recipe(Diff~.,data = train_df) %>%
step_date(Date) %>%
step_rm(Dem, Rep) %>% # make dummy variables
step_zv(all_predictors())
# fitting the train data to the model
my_wflow <- workflow() %>%
add_model(my_lgm) %>%
add_recipe(my_recipe)
fit<- my_wflow %>%  fit(data = train_df)
fit_df<- fit %>%
tidy()
head(fit_df)
# train predict
my_train_predict <- predict(fit, train_df) %>%
bind_cols(train_df %>% select(Diff, Date))
my_train_predict<-my_train_predict %>%
rename(predicted=.pred)
head(my_train_predict)
# test predict
my_test_predict <- predict(fit, test_df) %>%
bind_cols(test_df %>% select(Diff, Date))
my_test_predict<-my_test_predict %>%
rename(predicted=.pred)
head(my_test_predict)
rsq_test<-rsq(my_test_predict, truth = Diff, estimate = predicted)
rmse_test<-rmse(my_test_predict, truth = Diff, estimate = predicted)
### rsq of the test
rsq_test
### rmse of the test
rmse_test
### plot that shows the the efficient of the model on the train data
my_test_predict %>%
ggplot() +
geom_point(aes(predicted, Diff))+
geom_smooth(aes(predicted, Diff), method="lm", se=FALSE, color="lightgrey") +
labs(x="Acutal", y="Fitted (predicted)", title="Regression model", subtitle="using trumps tweets to predict the us nation concern for COVID 19") +
theme_bw()
### plot that shows the the efficient of the model on the test data
my_test_predict %>%
ggplot() +
geom_point(aes(predicted, Diff))+
geom_smooth(aes(predicted, Diff), method="lm", se=FALSE, color="lightgrey") +
labs(x="Acutal", y="Fitted (predicted)", title="Regression model", subtitle="using trumps tweets to predict the us nation concern for COVID 19") +
theme_bw()
### plot that shows the error of the model in the train prediction
my_train_predict %>%
mutate(error=Diff-predicted) %>%
ggplot(aes(x=Date, y=error)) +
geom_line() +
geom_point() +
labs(x="Date", y="Error", title="Error of the model", subtitle = "model for predection covid concern")
### plot that shows the error of the model in the test prediction
my_test_predict %>%
mutate(error=Diff-predicted) %>%
ggplot(aes(x=Date, y=error)) +
geom_line() +
geom_point() +
labs(x="Date", y="Error", title="Error of the model", subtitle = "model for predection covid concern")
Election1 <- readRDS("~/Project/clean_data/Election1.rds")
#Importing the election results dataset
Election1 <- readRDS("~/Project/clean_data/Election1.rds")
#Importing the election results dataset
Election1<-read.csv("data/red_blue.csv")
Election1<-Election1%>%rename(State=ABBR)
#Take a look at the data after importing it
glimpse(Election1)
#col name correction
Election1<-Election1%>%rename(STATE=ן..STATE)
#Joining the elections dataset with the cases dataset by state
#And some processing depending on what we saw from the glimpse, changing column names etc..
elec_cases<-cases1%>%inner_join(Election1,by="State")
elec_cases<-elec_cases%>%rename(ABBR=State)
#Take a look at the result
glimpse(elec_cases)
#Grouping by winner (party) and date
#Keeping only 2020 data
elec_cases1<-elec_cases%>%
group_by(Date,WINNER)%>%
summarise(cases=sum(Cases))%>%
filter(between(Date,ymd("2020-01-21"),ymd("2020-12-31")))
#Grouping by winner (party) and date
#Keeping only 2020 data
elec_cases1<-elec_cases%>%
group_by(Date,WINNER)%>%
summarise(cases=sum(Cases))%>%
filter(between(Date,ymd("2020-01-21"),ymd("2020-12-31")))
#Take a look at the result
head(elec_cases1)
#Take a look at the result
head(elec_cases1)
#Plotting
parties_plt<-ggplot(elec_cases1,aes(Date ,cases,color=WINNER))+
geom_line(size=1, alpha=0.68)+
scale_x_date(date_breaks = "1 month", date_labels = "%m")+
scale_y_continuous(labels= scales::comma,breaks = seq(from = 0, to = 200000, by = 25000))+
scale_color_manual(labels=c("Democratic", "Republican"), values =c("Blue", "red"))+
labs(title="Daily Covid Cases Among Republican VS Democratic States", subtitle = "During 2020", x="Month", y="Cases", color="States Party")+
theme_hc()
#From the data source we picked events related to mobility only
#(for example events related to masks were not included)
event_date<-c("2020-03-16", "2020-03-23", "2020-04-02", "2020-04-11", "2020-04-17", "2020-04-24", "2020-04-30", "2020-05-01", "2020-05-19", "2020-05-25", "2020-05-31", "2020-06-26", "2020-07-08", "2020-08-01", "2020-08-07", "2020-10-02", "2020-11-03")
event_date<-event_date%>%ymd()
event<-c("Trump tells Americans to avoid gathering in groups of more than 10 and to stop eating in restaurants and taking nonessential trips for the next 15 days. It is the closest the federal government will come to calling for a nationwide shutdown.","Under pressure from conservatives, Trump says he’s considering nixing the guidelines for social distancing he announced a week earlier, saying: “We cannot let the cure be worse than the problem itself.",
"Most Americans are living under stay-at-home orders.",
"The U.S. coronavirus death toll is the highest in the world, passing Italy.",
"Trump tweets “LIBERATE MINNESOTA,” “LIBERATE MICHIGAN” and “LIBERATE VIRGINIA,” encouraging protesters who are ignoring social distancing guidance and demanding that their states reopen. Shutdown opposition is spreading, aided by Trump and right-wing groups.",
"Georgia Gov. Brian Kemp, a Republican and one of the last leaders to issue a stay-at-home order, allows business to reopen. Georgia is the first state to do so.",
" The federal government’s social distancing guidelines expire, and most states push ahead with reopening plans.",
"From Michigan to California, gun rights supporters, anti-vaccination activists and business owners protest coronavirus restrictions. Some are heavily armed, some are displaying hate symbols.",
" Forty-three states have begun at least some form of reopening, hoping to boost their economies. Seven never had stay-at-home orders.",
"Crowded beaches, parties and pools during Memorial Day weekend alarm health officials. One calls the scene an “international example of bad judgment.",
"Millions flood streets across the country to protest the killing of George Floyd and police violence against Black Americans, sparking fears of a new round of virus outbreaks. Health officials will later say that the protests, which continue for days, probably did not cause a spike in cases.",
"The governors of Texas and Florida reverse course and shut down bars in their states as infections and hospitalizations soar.",
"Trump pressures the CDC to change guidance on school reopening and threatens to cut funding for schools that do not fully open for in-person learning.",
"A superintendent of schools in rural Arizona issues one of many warnings from educators thinking about reopening schools: “I’m sorry, but it’s a fantasy. Kids will get sick, or worse. Family members will die. Teachers will die.",
" Nearly 500,000 people converge on Sturgis, S.D., for a 10-day motorcycle rally. Attendees gather in bars, restaurants and tattoo parlors. The virus spreads, and there are additional outbreaks in the Midwest.",
"Trump says he and first lady Melania Trump have tested positive for the virus. Less than 24 hours later, he is flown to a hospital for treatment.",
"It is Election Day, and many Americans already have cast their ballots in a record-setting, pandemic-spurred wave of early voting.")
#The restrictions/events df
restriction<-data.frame(event_date, event)
saveRDS(restriction, file = "clean_data/restriction.rds")
#From the data source we picked events related to mobility only
#(for example events related to masks were not included)
event_date<-c("2020-03-16", "2020-03-23", "2020-04-02", "2020-04-11", "2020-04-17", "2020-04-24", "2020-04-30", "2020-05-01", "2020-05-19", "2020-05-25", "2020-05-31", "2020-06-26", "2020-07-08", "2020-08-01", "2020-08-07", "2020-10-02", "2020-11-03")
event_date<-event_date%>%ymd()
event<-c("Trump tells Americans to avoid gathering in groups of more than 10 and to stop eating in restaurants and taking nonessential trips for the next 15 days. It is the closest the federal government will come to calling for a nationwide shutdown.","Under pressure from conservatives, Trump says he’s considering nixing the guidelines for social distancing he announced a week earlier, saying: “We cannot let the cure be worse than the problem itself.",
"Most Americans are living under stay-at-home orders.",
"The U.S. coronavirus death toll is the highest in the world, passing Italy.",
"Trump tweets “LIBERATE MINNESOTA,” “LIBERATE MICHIGAN” and “LIBERATE VIRGINIA,” encouraging protesters who are ignoring social distancing guidance and demanding that their states reopen. Shutdown opposition is spreading, aided by Trump and right-wing groups.",
"Georgia Gov. Brian Kemp, a Republican and one of the last leaders to issue a stay-at-home order, allows business to reopen. Georgia is the first state to do so.",
" The federal government’s social distancing guidelines expire, and most states push ahead with reopening plans.",
"From Michigan to California, gun rights supporters, anti-vaccination activists and business owners protest coronavirus restrictions. Some are heavily armed, some are displaying hate symbols.",
" Forty-three states have begun at least some form of reopening, hoping to boost their economies. Seven never had stay-at-home orders.",
"Crowded beaches, parties and pools during Memorial Day weekend alarm health officials. One calls the scene an “international example of bad judgment.",
"Millions flood streets across the country to protest the killing of George Floyd and police violence against Black Americans, sparking fears of a new round of virus outbreaks. Health officials will later say that the protests, which continue for days, probably did not cause a spike in cases.",
"The governors of Texas and Florida reverse course and shut down bars in their states as infections and hospitalizations soar.",
"Trump pressures the CDC to change guidance on school reopening and threatens to cut funding for schools that do not fully open for in-person learning.",
"A superintendent of schools in rural Arizona issues one of many warnings from educators thinking about reopening schools: “I’m sorry, but it’s a fantasy. Kids will get sick, or worse. Family members will die. Teachers will die.",
" Nearly 500,000 people converge on Sturgis, S.D., for a 10-day motorcycle rally. Attendees gather in bars, restaurants and tattoo parlors. The virus spreads, and there are additional outbreaks in the Midwest.",
"Trump says he and first lady Melania Trump have tested positive for the virus. Less than 24 hours later, he is flown to a hospital for treatment.",
"It is Election Day, and many Americans already have cast their ballots in a record-setting, pandemic-spurred wave of early voting.")
#The restrictions/events df
restriction<-data.frame(event_date, event)
#saveRDS(restriction, file = "clean_data/restriction.rds")
#check it out
head(restriction)
#First, Tokenizing
tokenized_rest<-restriction %>%
unnest_tokens(word, event, token = "ngrams", n = 2, n_min = 1) %>%
anti_join(stop_words, by = "word")
#Word Frequency
restr_ngrams <- tokenized_rest %>%
group_by(event_date,word) %>%
summarise(n = n(), .groups = "drop") %>%
#Arrange the words frequency in descending order
arrange(desc(n))
head(restr_ngrams)
#Sentiment Analysis
Sentiment_count<-restr_ngrams%>%
inner_join(get_sentiments("bing"), by = "word") %>%
group_by(event_date, sentiment) %>%
summarise(n=n())
#In this df the negative words received a negative count value
#this is because, we'll combine the negative and positive count
#for each date, and based on the result we'll determine if the event was
#restrictive or facilitating
sentiment_count <- Sentiment_count %>%
mutate(n = if_else(sentiment == 'negative', -n, n))
head(sentiment_count)
#f refers to facialiting
restriction_sent<-sentiment_count %>%
group_by(event_date) %>%
summarise(total_count=sum(n))%>%
mutate(event_type = if_else(total_count >=0, "f", "r"))
restriction_sent
rest_sent_event<-inner_join(restriction_sent, restriction)
glimpse(rest_sent_event)
rest_sent_event<-rest_sent_event%>%mutate(event_type=c("r", "f", "r", "f", "f", "f", "f", "f", "f", "f", "r", "f","r", "f", "r"))
rest_sent_event<-rest_sent_event%>%mutate(event_type=c("r", "f", "r", "f", "f", "f", "f", "f", "f", "f", "r", "f","r", "f", "r"))
#glimpse(elec_cases1)
#Becase color in segment by event_state made several problems
#this is an alternative solution to color=event_type
fac<-rest_sent_event%>%filter(event_type=="f")
rest<-rest_sent_event%>%filter(event_type=="r")
parties_plt+
geom_segment(data = fac, aes(x = event_date, y = 200000, xend = event_date, yend =0), colour="black") +
geom_segment(data = rest, aes(x = event_date, y = 200000, xend = event_date, yend =0), colour="grey64") +
geom_text(data = fac , aes(x = event_date, y = 175000, label = event_type), color = "black", size=5)+
geom_text(data = rest , aes(x = event_date, y = 175000, label = event_type), color = "grey46", size=5)
mobility<-read.csv("data/state_visits_Travel & Transport.csv")
head(mobility)
#Pivot longer
pivoted_mobility<-mobility %>%
pivot_longer(!NAME, names_to = "date", values_to = "visits")
glimpse(pivoted_mobility)
#Manupilating
pivoted_mobility<-pivoted_mobility%>%rename(STATE=NAME)
glimpse(pivoted_mobility)
#Joining the elections results df with mobility data for the analysis
mobi_elec<-pivoted_mobility%>%inner_join(Election1,by="STATE")
mobi_elec
#cleaning
mobi_elec$date <- gsub("X", "", mobi_elec$date)
#tidying
mobi_elec<-mobi_elec%>%mutate(date=date%>%ymd())
#dealing with null values in accordance to the context
mobi_elec<-mobi_elec[!(is.na(mobi_elec$visits) | mobi_elec$visits=="" | mobi_elec$visits==0), ]
head(mobi_elec)
#Grouping by date and party
mobi_grouped<-mobi_elec%>%
group_by(date,WINNER)%>%
summarise(visits=sum(visits))
head(mobi_grouped)
saveRDS(mobi_elec, file = "clean_data/mobi_elec.rds")
#Grouping by date and party
mobi_grouped<-mobi_elec%>%
group_by(date,WINNER)%>%
summarise(visits=sum(visits))
head(mobi_grouped)
#Plotting
visits_plt<-ggplot(mobi_grouped,aes(date ,visits,color=WINNER))+
geom_point(size=1.7, alpha=0.5)+
geom_smooth(size=0.5, alpha=0.5)+
scale_x_date(date_breaks = "1 month", date_labels = "%m")+
scale_y_continuous(labels= scales::comma)+
scale_color_manual(labels=c("Democratic", "Republican"), values =c("Blue", "red"))+
labs(title="Traveling And Daily Visits in Republican VS Democratic States", subtitle = "During 2020", x="Month", y="Visits", color="States Party")+
theme_hc()
visits_plt
visits_plt+
geom_segment(data = fac, aes(x = event_date, y = 7000000, xend = event_date, yend =0), colour="black") +
geom_segment(data = rest, aes(x = event_date, y = 7000000, xend = event_date, yend =0), colour="grey64") +
geom_text(data = fac , aes(x = event_date, y = 1000000, label = event_type), color = "black", size=5)+
geom_text(data = rest , aes(x = event_date, y = 1000000, label = event_type), color = "grey46", size=5)+
#scaling x to fit the range in the 2 plotting datasets
scale_x_date(date_breaks = "1 month",
labels=date_format("%m"),limits = as.Date(c('2020-02-01','2020-07-20')))
#Joining the cases and visits dfs
visits_cases<-inner_join(mobi_grouped, elec_cases1, by=c("date"="Date"))
glimpse(visits_cases)
ggplot(visits_cases, aes(x=visits, y=cases, color=WINNER.x))+
geom_point(size=1.7, alpha=0.5)+
scale_x_discrete()+
scale_y_continuous(labels= scales::comma)+
scale_color_manual(labels=c("Democratic", "Republican"), values =c("Blue", "red"))+
labs(title="Covid Cases And Number Of Visits", subtitle = "During 2020 In Republican Vs Democratic States", x="Visits", y="Cases", color="States Party")+
theme_hc()
